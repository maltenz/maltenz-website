---
import { getCollection, getEntry } from 'astro:content';
import type { PostEntry, HeroEntry } from '../types/content';
import Layout from '../layouts/Layout.astro';
import { StyledEngineProvider } from '@mui/material';
import Theme from '../theme/Theme.tsx';
import Blog from '../components/blog/Blog';

// Get hero content with proper typing - try main first, then get the first available entry
let heroData: HeroEntry | undefined;
try {
  heroData = await getEntry('hero', 'main');
} catch (error) {
  const allHero: HeroEntry[] = await getCollection('hero');
  heroData = allHero?.[0];
}

// Fetch all blog posts with proper typing
const posts: PostEntry[] = await getCollection('posts');
---

<Layout>
  <StyledEngineProvider injectFirst client:load>
    <Theme>
      <Blog />
    </Theme>
  </StyledEngineProvider>
</Layout>

<!-- âœ… Redirect recovery token hash -->
<script>
  // Wait for full page load to ensure hash is available
  window.addEventListener('load', () => {
    const hash = window.location.hash;
    console.log({hash})
    if (hash.includes('token')) {

      window.location.href = `/admin/${hash}`;
    }
  });
</script>
