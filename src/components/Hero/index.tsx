import Box from '@mui/material/Box';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import Container from '@mui/material/Container';
import Grid from '@mui/material/Grid';
import Typography from '@mui/material/Typography';
import { styled, useTheme } from '@mui/material/styles';

import { useThemeStore } from '../../stores/themeStore';
import { yellowVariant, orangeVariant, darkPurpleVariant, purpleVariant } from '../../theme/themePrimitives';
import type { HeroData } from '../../types/content';
import Author from '../Author';
import TagList, { Tags } from '../Taglist';

const StyledCard = styled(Card)(({ theme }) => ({
  display: 'flex',
  flexDirection: 'column',
  padding: 0,
  height: '100%',
  backgroundColor: (theme.vars || theme).palette.background.paper,
}));

const StyledCardContent = styled(CardContent)(({ theme }) => ({
  display: 'flex',
  flexDirection: 'column',
  padding: theme.spacing(2),
  // flexGrow: 1,
  maxWidth: 780,
}));

type HeroProps = {
  data: HeroData;
};

export default function Hero({ data }: HeroProps) {
  const theme = useTheme();
  const { colorScheme } = useThemeStore();

  // Function to get SVG colors based on current theme
  const getSvgColors = () => {
    switch (colorScheme) {
      case 'purple':
        return {
          start: orangeVariant[500], // Purple dots
          mid: theme.palette.common.white, // White text for "mid"
          end: yellowVariant[500], // Orange-red for "ai" (#F75643)
        };
      case 'yellow':
        return {
          start: darkPurpleVariant[500], // Yellow dots
          mid: theme.palette.common.white, // Purple text for "mid" (#7B3BB9)
          end: orangeVariant[500], // Dark text for "ai"
        };
      case 'orange':
        return {
          start: darkPurpleVariant[500], // Orange dots
          mid: theme.palette.common.white, // White text for "mid"
          end: theme.palette.secondary.main, // Purple for "ai" (#7B3BB9)
        };
      case 'dark-purple':
        return {
          start: yellowVariant[500], // Dark purple dots
          mid: theme.palette.common.white, // Yellow text for "mid" (#FFD700)
          end: purpleVariant[500], // Yellow for "ai" (#FFD700)
        };
      case 'dark':
        return {
          start: yellowVariant[500], // Yellow for "i" dots
          mid: theme.palette.common.white, // White for "mid"
          end: orangeVariant[500], // Orange-red for "ai"
        };
      case 'light':
      default:
        return {
          start: theme.palette.primary.main,
          mid: orangeVariant[500],
          end: theme.palette.secondary.main,
        };
    }
  };

  const svgColors = getSvgColors();
  const getDisplayDate = () => {
    if (data.publishDate) {
      return new Date(data.publishDate).toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });
    }
    return 'No date available';
  };

  return (
    <Container maxWidth="lg" component="main" sx={{ display: 'flex', flexDirection: 'column', my: 16, gap: 4 }}>
      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 4 }}>
        {/* <div>
          <Typography variant="h1" gutterBottom sx={{ whiteSpace: 'pre-line', mt: 0, mb: 0 }}>
            {data.title
              .replace('Aimid,', '|AIMI|')
              .split('|')
              .map((part) => {
                if (part === 'AIMI') {
                  return (
                    <Box
                      key="aimi-styled"
                      component="span"
                      sx={{
                        fontFamily: '"Pacifico", cursive',
                      }}
                    >
                      Aimid,
                    </Box>
                  );
                }
                return part;
              })}
          </Typography>``
        </div> */}

        <Box sx={{ display: 'flex', justifyContent: 'center' }}>
          <Box
            component="svg"
            width="300px"
            height="108px"
            viewBox="0 0 159 57"
            sx={{ maxWidth: '45vw', height: 'auto' }}
            xmlns="http://www.w3.org/2000/svg"
          >
            <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
              <g transform="translate(0.138021, 0.339329)" fillRule="nonzero">
                <path
                  d="M16.5128906,56.6407216 C13.3997891,56.6407216 10.5912723,55.8881756 8.08725586,54.383061 C5.58323943,52.8779463 3.60938222,50.6977762 2.165625,47.8424853 C0.721867781,44.9871943 1.77635684e-13,41.611804 1.77635684e-13,37.7162132 C1.77635684e-13,30.9874655 1.46629393,24.7568271 4.39892578,19.0241111 C7.33155763,13.2913951 11.6627643,8.68758409 17.3926758,5.21254003 C23.1225872,1.73749597 30.0028895,-5.68434189e-14 38.0337891,-5.68434189e-14 C40.1091901,-5.68434189e-14 42.3311893,0.154935946 44.6998535,0.464812487 C47.0685177,0.774689027 49.2228419,1.23949687 51.1628906,1.85924995 C52.4261782,2.21339457 53.0578125,3.09874283 53.0578125,4.5153213 C53.0578125,5.66629131 52.6179243,6.75084293 51.7381348,7.76900871 C50.8583452,8.78717449 49.8319395,9.29624974 48.6588867,9.29624974 C48.2979474,9.29624974 48.027247,9.27411603 47.8467773,9.22984795 C45.5006719,8.69863103 43.4929771,8.31129116 41.8236328,8.06781674 C40.1542885,7.82434231 38.3947358,7.70260692 36.5449219,7.70260692 C30.8150104,7.70260692 25.9424029,9.06382988 21.9269531,11.7863166 C17.9115034,14.5088034 14.9112404,18.1055307 12.9260742,22.5766065 C10.940908,27.0476823 9.94833984,31.8728303 9.94833984,37.0521954 C9.94833984,40.8149819 10.7040452,43.7255644 12.2154785,45.78403 C13.7269119,47.8424955 15.7007691,48.8717129 18.1371094,48.8717129 C20.8892716,48.8717129 23.303017,47.7650276 25.378418,45.5516237 C27.453819,43.3382199 29.3487219,39.7525594 31.0631836,34.7945347 C32.7776453,29.8365101 34.4695229,23.1078633 36.1388672,14.6083924 C36.4095717,13.3688863 36.9509725,12.5278054 37.7630859,12.0851247 C38.5751994,11.6424439 39.658001,11.4211068 41.0115234,11.4211068 C44.2148598,11.4211068 45.8165039,12.4392573 45.8165039,14.4755889 C45.8165039,14.8297335 45.7488288,15.2724076 45.6134766,15.8036246 C44.4404238,20.097628 43.3689013,24.8453081 42.398877,30.0468072 C41.4288526,35.2483063 40.9438477,39.1991729 40.9438477,41.8995256 C40.9438477,44.2900018 41.3047815,46.0274977 42.0266602,47.1120656 C42.7485388,48.1966335 43.8538988,48.7389093 45.3427734,48.7389093 C46.7865307,48.7389093 48.1625911,48.2630346 49.4709961,47.311271 C50.7794011,46.3595073 52.4261619,44.7326799 54.4113281,42.4307399 C54.9527371,41.8109868 55.561813,41.5011149 56.2385742,41.5011149 C56.8251006,41.5011149 57.2875471,41.7667194 57.6259277,42.2979363 C57.9643083,42.8291532 58.1334961,43.5595655 58.1334961,44.4891952 C58.1334961,46.2156502 57.7048871,47.58794 56.8476563,48.6061058 C54.636903,51.2179223 52.4712997,53.2099559 50.3507813,54.5822663 C48.2302628,55.9545767 45.6360505,56.6407216 42.5680664,56.6407216 C39.4098475,56.6407216 36.8607519,55.7443065 34.9207031,53.9514494 C32.9806544,52.1585922 31.7625025,49.6242828 31.2662109,46.3484451 C27.9275224,53.2099971 23.0097981,56.6407216 16.5128906,56.6407216 Z"
                  fill={svgColors.start}
                />

                <g transform="translate(51.814270, 8.245354)" fill={svgColors.start}>
                  <g transform="translate(-0.000000, 0.000000)">
                    <path d="M10.2867187,10.3586783 C8.3917874,10.3586783 6.97061021,9.927071 6.02314453,9.06384349 C5.07567886,8.20061599 4.60195313,6.99432898 4.60195313,5.44494627 C4.60195313,3.89556357 5.22230825,2.60074174 6.46303711,1.56044192 C7.70376597,0.520142105 9.24901419,1.17239551e-13 11.0988281,1.17239551e-13 C12.7681724,1.17239551e-13 14.1216745,0.398406719 15.159375,1.19523211 C16.1970755,1.9920575 16.715918,3.12087654 16.715918,4.58172308 C16.715918,6.35244617 16.1294004,7.75793654 14.9563477,8.79823636 C13.7832949,9.83853617 12.2267675,10.3586783 10.2867187,10.3586783 Z" />
                    <path d="M3.78984375,46.0164362 C2.34608653,46.0164362 1.35351833,45.728698 0.812109375,45.153213 C0.270700418,44.577728 -8.17124146e-14,43.670246 -8.17124146e-14,42.4307399 C-8.17124146e-14,42.0765953 0.0451167363,41.4568515 0.135351562,40.5714899 C0.857230172,32.4704318 2.05282368,25.0999075 3.72216797,18.4596959 C4.08310727,17.0873855 4.68090403,16.1245693 5.51557617,15.5712183 C6.35024831,15.0178673 7.69247122,14.741196 9.54228516,14.741196 C11.4823339,14.741196 12.4523437,15.5158757 12.4523437,17.0652584 C12.4523437,17.2865988 12.407227,17.7071393 12.3169922,18.3268923 C10.2867086,27.8002609 9.06855672,35.7462615 8.6625,42.1651327 C8.57226517,43.5817112 8.14365618,44.577728 7.37666016,45.153213 C6.60966413,45.728698 5.41407062,46.0164362 3.78984375,46.0164362 Z" />
                  </g>
                </g>

                <g transform="translate(69.702530, 10.519934)" fill={svgColors.mid}>
                  <g transform="translate(0.000000, 0.000000)">
                    <path d="M4.66962891,46.0164362 C2.95516721,46.0164362 1.74829451,45.1310879 1.04897461,43.3603648 C0.349654707,41.5896418 0,38.7565273 0,34.8609365 C0,29.1060865 0.834659622,23.6390609 2.50400391,18.4596959 C2.91006062,17.1759217 3.57553248,16.2352391 4.50043945,15.6376201 C5.42534642,15.0400011 6.72245259,14.741196 8.39179688,14.741196 C9.29414514,14.741196 9.92577945,14.8518645 10.2867187,15.0732049 C10.6476581,15.2945453 10.828125,15.7150857 10.828125,16.3348388 C10.828125,17.0431281 10.4897495,18.6367549 9.81298828,21.1157673 C9.36181415,22.8864903 9.00088026,24.424783 8.73017578,25.7306912 C8.4594713,27.0365995 8.23388762,28.663427 8.05341797,30.6112223 C9.27158812,27.1583123 10.7266029,24.2366631 12.4185059,21.8461869 C14.1104089,19.4557107 15.8474032,17.6739473 17.629541,16.5008433 C19.4116788,15.3277392 21.0922773,14.741196 22.6713867,14.741196 C24.2504962,14.741196 25.3671354,15.0953353 26.0213379,15.8036246 C26.6755404,16.5119138 27.0026367,17.5964654 27.0026367,19.057312 C27.0026367,20.4738904 26.5740277,23.0414004 25.7167969,26.7599189 C25.3558576,28.3535697 25.1077155,29.5487898 24.9723633,30.3456152 C27.2282339,24.9006417 29.7322128,20.9387082 32.484375,18.4596959 C35.2365372,15.9806836 37.8081912,14.741196 40.1994141,14.741196 C43.1320459,14.741196 44.5983398,16.1798869 44.5983398,19.057312 C44.5983398,20.783767 44.1020557,23.9046196 43.1094727,28.4199635 C42.2522418,32.2712862 41.8236328,34.8166625 41.8236328,36.0561686 C41.8236328,37.8268917 42.4778255,38.71224 43.7862305,38.71224 C44.6885787,38.71224 45.7601012,38.1699642 47.0008301,37.0853963 C48.2415589,36.0008284 49.899599,34.2411987 51.975,31.8064545 C52.516409,31.1867014 53.1254849,30.8768295 53.8022461,30.8768295 C54.3887725,30.8768295 54.851219,31.142434 55.1895996,31.6736509 C55.5279802,32.2048678 55.697168,32.9352801 55.697168,33.8649098 C55.697168,35.6356328 55.268559,37.0079227 54.4113281,37.9818204 C52.4712794,40.3280284 50.3846303,42.2536609 48.1513184,43.7587755 C45.9180064,45.2638902 43.38019,46.0164362 40.537793,46.0164362 C38.2368049,46.0164362 36.4998106,45.3634919 35.3267578,44.0575836 C34.1537051,42.7516753 33.5671875,40.8592434 33.5671875,38.3802311 C33.5671875,37.1407249 33.8830047,34.9273542 34.5146484,31.7400527 C35.1011748,28.9511638 35.3944336,27.0255313 35.3944336,25.9630975 C35.3944336,25.2548082 35.1462915,24.9006689 34.65,24.9006689 C34.0634736,24.9006689 33.228814,25.6421481 32.1459961,27.1251287 C31.0631782,28.6081093 29.9803765,30.5669423 28.8975586,33.0016866 C27.8147407,35.4364308 26.9349643,38.0039408 26.2582031,40.7042935 C25.7619116,42.8291612 25.1866732,44.2457184 24.5324707,44.9540077 C23.8782682,45.6622969 22.8293041,46.0164362 21.3855469,46.0164362 C19.8966722,46.0164362 18.780033,45.3192244 18.0355957,43.92478 C17.2911584,42.5303356 16.9189453,40.837107 16.9189453,38.8450435 C16.9189453,37.1628566 17.144529,34.7281489 17.5957031,31.5408473 C17.9566424,28.7076904 18.1371094,26.848459 18.1371094,25.9630975 C18.1371094,25.2548082 17.8889673,24.9006689 17.3926758,24.9006689 C16.7159146,24.9006689 15.8586966,25.6974824 14.8209961,27.2911332 C13.7832956,28.8847839 12.7794482,30.9210849 11.8094238,33.4000973 C10.8393994,35.8791096 10.0611357,38.3138173 9.47460937,40.7042935 C8.97831783,42.7848931 8.40307944,44.1903835 7.74887695,44.9208068 C7.09467446,45.65123 6.06826871,46.0164362 4.66962891,46.0164362 Z" />
                    <path d="M59.7420974,10.3586783 C57.847166,10.3586783 56.4259888,9.927071 55.4785231,9.06384349 C54.5310575,8.20061599 54.0573317,6.99432898 54.0573317,5.44494627 C54.0573317,3.89556357 54.6776869,2.60074174 55.9184157,1.56044192 C57.1591446,0.520142105 58.7043928,2.84217094e-14 60.5542067,2.84217094e-14 C62.223551,2.84217094e-14 63.5770531,0.398406719 64.6147536,1.19523211 C65.6524541,1.9920575 66.1712966,3.12087654 66.1712966,4.58172308 C66.1712966,6.35244617 65.584779,7.75793654 64.4117263,8.79823636 C63.2386735,9.83853617 61.6821461,10.3586783 59.7420974,10.3586783 Z" />
                    <path d="M53.2452224,46.0164362 C51.8014651,46.0164362 50.8088969,45.728698 50.267488,45.153213 C49.726079,44.577728 49.4553786,43.670246 49.4553786,42.4307399 C49.4553786,42.0765953 49.5004953,41.4568515 49.5907302,40.5714899 C50.3126088,32.4704318 51.5082023,25.0999075 53.1775466,18.4596959 C53.5384859,17.0873855 54.1362826,16.1245693 54.9709548,15.5712183 C55.8056269,15.0178673 57.1478498,14.741196 58.9976638,14.741196 C60.9377125,14.741196 61.9077224,15.5158757 61.9077224,17.0652584 C61.9077224,17.2865988 61.8626056,17.7071393 61.7723708,18.3268923 C59.7420872,27.8002609 58.5239353,35.7462615 58.1178786,42.1651327 C58.0276438,43.5817112 57.5990348,44.577728 56.8320388,45.153213 C56.0650427,45.728698 54.8694492,46.0164362 53.2452224,46.0164362 Z" />
                  </g>
                </g>

                <g transform="translate(135.704041, 10.519934)" fill={svgColors.end}>
                  <g>
                    <g transform="translate(-0.000000, 0.000000)">
                      <path d="M11.5361178,10.3586783 C9.64118644,10.3586783 8.22000924,9.927071 7.27254357,9.06384349 C6.32507789,8.20061599 5.85135216,6.99432898 5.85135216,5.44494627 C5.85135216,3.89556357 6.47170729,2.60074174 7.71243615,1.56044192 C8.95316501,0.520142105 10.4984132,-1.66977543e-13 12.3482272,-1.66977543e-13 C14.0175714,-1.66977543e-13 15.3710735,0.398406719 16.408774,1.19523211 C17.4464745,1.9920575 17.965317,3.12087654 17.965317,4.58172308 C17.965317,6.35244617 17.3787994,7.75793654 16.2057467,8.79823636 C15.032694,9.83853617 13.4761666,10.3586783 11.5361178,10.3586783 Z" />
                      <path d="M8.39179688,46.0164362 C5.45916502,46.0164362 3.32739923,44.9982857 1.99643555,42.9619541 C0.665471861,40.9256226 -3.55271368e-14,38.2253104 -3.55271368e-14,34.8609365 C-3.55271368e-14,32.868873 0.259421234,30.3124299 0.778271484,27.1915305 C1.29712173,24.070631 1.9625936,21.1600486 2.77470703,18.4596959 C3.18076375,17.0431174 3.72216458,16.0692343 4.39892578,15.5380174 C5.07568698,15.0068005 6.15848865,14.741196 7.64736328,14.741196 C9.94835135,14.741196 11.0988281,15.493742 11.0988281,16.9988567 C11.0988281,18.1055586 10.6702191,20.6730686 9.81298828,24.7014636 C8.73017037,29.5709521 8.18876953,32.8688744 8.18876953,34.5953294 C8.18876953,35.9233717 8.36923648,36.9415222 8.73017578,37.6498114 C9.09111509,38.3581007 9.70019103,38.71224 10.5574219,38.71224 C11.3695353,38.71224 12.3846619,38.1588973 13.602832,37.0521954 C14.8210022,35.9454934 16.4452047,34.1969306 18.4754883,31.8064545 C19.0168972,31.1867014 19.6259732,30.8768295 20.3027344,30.8768295 C20.8892607,30.8768295 21.3517073,31.142434 21.6900879,31.6736509 C22.0284685,32.2048678 22.1976562,32.9352801 22.1976562,33.8649098 C22.1976562,35.6356328 21.7690473,37.0079227 20.9118164,37.9818204 C16.4451925,43.3382577 12.2718944,46.0164362 8.39179688,46.0164362 Z" />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </Box>
        </Box>

        <Typography variant="h5" sx={{ fontWeight: '400', textAlign: 'center', mt: -2, color: 'text.secondary' }}>
          Express Yourself
        </Typography>

        <Grid container spacing={2} columns={12}>
          <Grid size={{ xs: 12, md: 12 }} sx={{ height: '100%' }}>
            <Typography variant="h4" mb={2} sx={{ fontWeight: '400' }}>
              Demo
            </Typography>

            <StyledCard variant="outlined">
              <Box component="img" src="/brand/build-your-dream-min.png" sx={{ borderRadius: 1 }} />

              <StyledCardContent>
                <TagList tags={[Tags.Sketch, Tags.Source]} sx={{ mb: 2 }} />

                <Typography variant="h4">
                  Get started with{' '}

                  <Typography
                    component="span"
                    sx={{
                      fontFamily: '"Pacifico", cursive',
                    }}
                  >
                    Aimid
                  </Typography>
                </Typography>

                <Typography variant="body1" color="text.secondary" sx={{ whiteSpace: 'pre-line' }}>
                  {data.description}
                </Typography>
              </StyledCardContent>

              <Box
                sx={{
                  display: 'flex',
                  flexDirection: 'row',
                  alignItems: 'center',
                  justifyContent: 'space-between',
                  padding: 2,
                }}
              >
                <Author />
                <Typography variant="caption">{getDisplayDate()}</Typography>
              </Box>
            </StyledCard>
          </Grid>
        </Grid>
      </Box>
    </Container>
  );
}
